# ЗП
def wages(industry_type_id, num_employees):
    '''
    Функция расчета расходов на персонал.
    На вход принимается отрасль и количество сотрудников. Эти данные вводит пользователь.
    Затем для выбранной отрасли определяется средняя зарплата с учетом роста реальных зарплат для 2022 года (-0.1 %).
    После расчитывается фонд оплаты труда, НДФЛ и страховые взносы (в тыс рублях).
    Все данные формируются в словарь.
    "Итого" указывается в суммарных расходах на персонал,
    а "Зарплата", "НДФЛ" и "Страховые взносы" являются отдельными строками в детализации расходов на персонал.
    '''


    dict_wages = {3: 90812,
                      4: 67905,
                      25: 84686,
                      15: 40133,
                      14: 104463,
                      6: 3659,
                      13: 76058,
                      16: 58258,
                      20: 94907,
                      5: 73174,
                      1: 49722,
                      17: 33178,
                      24: 54906,
                      23: 95795,
                      7: 121109,
                      19: 545,
                      10: 96511,
                      18: 37622,
                      25: 42081,
                      2: 9076,
                      21: 86346,
                      22: 87788,
                      12: 73604,
                      11: 101981,
                      8: 64009}
    fot = round(dict_wages[industry_type_id] * num_employees, 3)
    ndfl = round(fot * 0.13, 3)
    ops = round((fot + ndfl) * 0.22, 3)
    oms = round((fot + ndfl) * 0.051, 3)
    vnim = round((fot + ndfl) * 0.029, 3)
    fees = ops + oms + vnim
    res_wage_dict = {'Год':
                             {'Зарплата': round(fot * 12, 0),
                              'НДФЛ': round(ndfl * 12, 0),
                              'ОПС': round(ops * 12, 0),
                              'ОМС': round(oms * 12, 0),
                              'ВНиМ': round(vnim * 12, 0),
                              'Страховые взносы': round(fees * 12, 0),
                              'Итого': round(fot * 12, 0) + round(ndfl * 12, 0) + round(fees * 12, 0)},
                         '6 месяцев':
                             {'Зарплата': round(fot * 6, 0),
                              'НДФЛ': round(ndfl * 6, 0),
                              'ОПС': round(ops * 6, 0),
                              'ОМС': round(oms * 6, 0),
                              'ВНиМ': round(vnim * 6, 0),
                              'Страховые взносы': round(fees * 6, 0),
                              'Итого': round(fot * 6, 0) + round(ndfl * 6, 0) + round(fees * 6, 0)}
                         }
    return res_wage_dict


def patent(company_type:int)->int:
    '''
    Среднее значение патента на основе потенциального дохода, предоставленного в датасетах
    company_type 1 = ИП. 2 - ООО
    '''
    try:
        if company_type == 1:
            return 255.969 * 1_000
        else:
            return 0
    except:
        return 0

def registrastion_fee(company_type:int)->int:
    '''
    Функция расчета госпошлины за регистрацию в зависимости от кода ОКОПФ компании
    company_type 1 = ИП. 2 - ООО
    '''
    try:
        return 800 if company_type == 1 else 4_000
    except:
        print('Введены некорректные данные')


def machinery(user_machinery:str, quantity:int) -> int:
    '''
    Функция расчета трат на станки.
    Исходные данные принимаются в виде:
    {Тип_станка1:[кол-во станков1, цена1],
    Тип_станка2:[кол-во станков2, цена2]}.
    На выходе дается слварь с итоговой суммой и детализацией
    '''
    try:
        price_machinery ={
            'Токарные станки':2590991.55,
            'Сверлильные и расточные станки':2558234.47,
            'Фрезерные станки':3845923.27,
            'Строгальные, долбёжные и протяжные станки':3150656.02,
            'Шлифовальные, полировальные, доводочные станки':4481440.09,
            'Зубообрабатывающие и резьбонарезные станки':5258960.28,
            'Разрезные станки':562505.33,
            'Кузнечно-прессовое оборудование':2829654.91,
            'Электрофизическое, электрохимическое, лазерное оборудование':9930022.79,
            'Аддитивное оборудование':250987,
            'Оборудование для отделки поверхности':137333,
            'Промышленные роботы и робототехнические устройства':10028800,
            'Деревообрабатывающее оборудование':15257770,
            'Прочие станки':1200000
        }
        return round(price_machinery[user_machinery] * quantity, 0)
    except:
        if not len(user_machinery):
            print('')
        else:
            print('Введены некорректные данные')